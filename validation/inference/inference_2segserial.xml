<beast version="2.0"
       namespace="beast.core
                 :beast.core.util
                 :beast.core.parameter
                 :beast.evolution.alignment
                 :beast.evolution.likelihood
                 :beast.evolution.tree
                 :beast.evolution.tree.coalescent
                 :beast.evolution.sitemodel
                 :beast.evolution.substitutionmodel
                 :beast.evolution.operators
                 :beast.math.distributions
                 :feast.simulation
                 :feast.fileio
                 :coalre.network
                 :coalre.statistics
                 :coalre.simulator
                 :coalre.distribution
                 :coalre.operators">

    <alignment id="seg1align" spec="AlignmentFromNexus" fileName="simulate_2segserial.seg1.alignment.nexus"/>
    <alignment id="seg2align" spec="AlignmentFromNexus" fileName="simulate_2segserial.seg2.alignment.nexus"/>

    <run spec="MCMC" chainLength="100000000">

        <state>
            <stateNode id="seg1tree" spec="Tree">
                <taxonset id="taxonSet" spec="TaxonSet">
                    <taxon spec="Taxon" id="t1"/>
                    <taxon spec="Taxon" id="t2"/>
                    <taxon spec="Taxon" id="t3"/>
                    <taxon spec="Taxon" id="t4"/>
                    <taxon spec="Taxon" id="t5"/>
                    <taxon spec="Taxon" id="t6"/>
                    <taxon spec="Taxon" id="t7"/>
                    <taxon spec="Taxon" id="t8"/>
                    <taxon spec="Taxon" id="t9"/>
                    <taxon spec="Taxon" id="t10"/>
                </taxonset>
                <trait spec="TraitSet" traitname="date-backward" id="traitSet">
                    t1=0, t2=0.2, t3=0, t4=0, t5=0, t6=0, t7=0, t8=0, t9=0, t10=0
                    <taxa idref="taxonSet"/>
                </trait>
            </stateNode>
            <stateNode id="seg2tree" spec="Tree" taxonset="@taxonSet" trait="@traitSet"/>

            <stateNode id="network" spec="SimulatedCoalescentNetwork" enableSegmentTreeUpdate="false">
                <populationModel spec="ConstantPopulation">
                    <popSize spec="RealParameter" value="1.0"/>
                </populationModel>

                <reassortmentRate spec="RealParameter" value="0.5"/>

                <segmentTree id="dummyseg1tree" spec="Tree" taxonset="@taxonSet" trait="@traitSet"/>
                <segmentTree id="dummyseg2tree" spec="Tree" taxonset="@taxonSet" trait="@traitSet"/>
            </stateNode>
        </state>

        <init spec="SegmentTreeInitializer" network="@network">
            <segmentTree idref="seg1tree"/>
            <segmentTree idref="seg2tree"/>
        </init>

        <distribution id="posterior" spec="CompoundDistribution">

            <distribution id="likelihood" spec="CompoundDistribution">
                <distribution spec="TreeLikelihood">
                    <data idref="seg1align"/>
                    <tree idref="seg1tree"/>
                    <siteModel spec="SiteModel">
                        <mutationRate spec="RealParameter" value="0.02"/>
                        <substModel spec="JukesCantor"/>
                    </siteModel>
                </distribution>

                <distribution spec="TreeLikelihood">
                    <data idref="seg2align"/>
                    <tree idref="seg2tree"/>
                    <siteModel spec="SiteModel">
                        <mutationRate spec="RealParameter" value="0.02"/>
                        <substModel spec="JukesCantor"/>
                    </siteModel>
                </distribution>
            </distribution>

            <distribution id="prior" spec="CompoundDistribution">
                <distribution id="networkPrior" spec="CoalescentWithReassortment">
                    <networkIntervals spec="NetworkIntervals" network="@network"/>

                    <populationModel spec="ConstantPopulation">
                        <popSize spec="RealParameter" value="1.0"/>
                    </populationModel>

                    <reassortmentRate spec="RealParameter" value="1.0"/>
                </distribution>
            </distribution>
        </distribution>

        <operator spec="AddRemoveReassortment" network="@network" alpha="1.0" weight="1.0">
            <segmentTree idref="seg1tree"/>
            <segmentTree idref="seg2tree"/>
        </operator>

        <operator spec="DivertSegmentOperator" network="@network" weight="1.0">
            <segmentTree idref="seg1tree"/>
            <segmentTree idref="seg2tree"/>
        </operator>

        <operator spec="UniformNetworkNodeHeightOperator" network="@network" weight="1.0">
            <segmentTree idref="seg1tree"/>
            <segmentTree idref="seg2tree"/>
        </operator>

        <operator id="NetworkScale" spec="NetworkScaleOperator"
                  network="@network" weight="1.0">
            <segmentTree idref="seg1tree"/>
            <segmentTree idref="seg2tree"/>
        </operator>

        <operator id="NetworkScaleRootOnly" spec="NetworkScaleOperator"
                  network="@network" scaleRootOnly="true" weight="1.0">
            <segmentTree idref="seg1tree"/>
            <segmentTree idref="seg2tree"/>
        </operator>

        <logger spec="Logger" logEvery="10000" mode="tree" fileName="$(filebase).trees">
            <log idref="network"/>
        </logger>

        <logger spec="Logger" logEvery="10000" mode="tree" fileName="$(filebase).seg1.trees">
            <log idref="seg1tree"/>
        </logger>

        <logger spec="Logger" logEvery="10000" mode="tree" fileName="$(filebase).seg2.trees">
            <log idref="seg2tree"/>
        </logger>

        <logger spec="Logger" logEvery="10000" fileName="$(filebase).log">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log spec="NetworkStatsLogger" network="@network"/>
            <log spec="TreeStatLogger" tree="@seg1tree"/>
            <log spec="TreeStatLogger" tree="@seg2tree"/>
        </logger>

        <logger spec="Logger" logEvery="10000">
            <log idref="posterior"/>
            <log idref="likelihood"/>
            <log idref="prior"/>
            <log spec="NetworkStatsLogger" network="@network"/>
            <log spec="ESS" arg="@posterior"/>
        </logger>

    </run>
</beast>